name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      workflow_to_run:
        type: choice
        description: Which workflow to run?
        required: true
        options:
          - all
          - hardhat-tests
          - foundry-tests
  pull_request:
    types:
      - ready_for_review
      - review_requested
  pull_request_review:
    types: [submitted]

defaults:
  run:
    shell: bash

jobs:
  run-linters:
    if: github.ref == 'refs/heads/main' || github.event.review.state == 'approved' || github.event.action == 'ready_for_review' || github.event.action == 'review_requested'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-
      - name: Install dependencies
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Run solhint
        run: yarn lint:sol
      - name: Run eslint
        run: yarn lint:js:fix

  hardhat-tests:
    if: github.ref == 'refs/heads/main' || github.event.inputs.workflow_to_run == 'all' || github.event.inputs.workflow_to_run == 'hardhat-tests' || github.event.review.state == 'approved' || github.event.action == 'ready_for_review' || github.event.action == 'review_requested'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-
      - name: Install dependencies
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # This is required separately from yarn test because it generates the typechain definitions
      - name: Compile
        run: yarn compile
      - name: Run unit tests
        run: yarn test
        env:
          ENABLE_GAS_REPORT: true
          CI: true
          ETH_NODE_URI_FORK: ${{secrets.ETH_NODE_URI_FORK}}

  foundry-tests:
    if: github.ref == 'refs/heads/main' || github.event.inputs.workflow_to_run == 'all' || github.event.inputs.workflow_to_run == 'foundry-tests' || github.event.review.state == 'approved' || github.event.action == 'ready_for_review' || github.event.action == 'review_requested'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-
      - run: yarn install --frozen-lockfile

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Run Foundry tests
        run: forge test -vvv
